---
layout: default
---
<%

function isRequired(key,requiredProperties) {
	if( _.indexOf(requiredProperties,key,0) != -1 )
		return "_Required_";
	else
		return "";
}
function createLink(str,link){
  return "[" + str + "](" + link+ ")";
}
function getType(valueObject) {
var type=valueObject.type;
  if(type == "anyOf")
    { var str="";
      var curObj=valueObject["anyOf"];
      _.each(curObj,function(obj,index){
        if(index != (curObj.length - 1) )
            str = str + getType(obj) + "|" ;
        else
            str = str + getType(obj) ;
      });
      return str;
    }
  if(type == "array"){
    var items=valueObject["items"];
    var str="";
    if(items.properties)
      return "Array of Object Containing following Properties" + NestedProperties(items);
    if(valueObject["items"]){
      var str=getType(valueObject["items"])
        return str+"[]";
    }

  }
  if(valueObject["$linkPath"]){
    return createLink("`" + valueObject["type"] + "`",valueObject["$linkPath"]);
  }
  else{
    if( valueObject["format"])
      return "`"+valueObject["format"]+"`";
    else{
      if(valueObject["type"])
        return "`"+valueObject["type"]+"`";
    }

  }
      return "";

}
function NestedProperties(valueObj){
  if(valueObj["properties"] && Object.keys(valueObj["properties"]).length > 0){

    var string="\n#### **Properties**\n";
    _.forOwn(valueObj["properties"], function (value,prop) {
      if(value["description"])
        description=value["description"];
      else
        description="";
  string=string + "*  **"+linkProperty(prop)+"** "+getType(value)
  +"  \n"+description+"\n\n";

  });
  return string;
  }
}

function displayEnum(valueObj){
  if(valueObj["enum"]){
    enumArray = valueObj["enum"];
  var str="\n\n *x âˆˆ  {";
  _.each(enumArray,function(item,index){
    if(index != (enumArray.length - 1) )
      str=str+item+",";
    else
      str=str+item+"}*\n ";

  });
  return str;
  }
  return "";
}

function linkProperty(str){
  if(validUrl.isUri(str)){
    arr=str.split("/");
    text=arr[arr.length - 1 ];
    return createLink(text,str);
  }
  else
    return str;
}

function displayDefinitions(obj){
	var str="## Definitions\n\n";
	_.forOwn(obj, function (value,prop) {
		str=str+"### "+prop+":\n\n"+getType(value)+"\n\n";
	});

return str;

}
%>
# <%- schema["title"] %>

<%- schema["description"] %>
## Properties

<% _.forOwn(schema.properties, function (value,prop) { %>

###  <%- linkProperty(prop) %>
<%- getType(value) %> <%- isRequired(prop,schema["required"]) %>

<%- value["description"] %><%- displayEnum(value) %><%- NestedProperties(value)  %>
<% }); %>

<% if(schema["definitions"]) { %>

<%- displayDefinitions(schema["definitions"]) %>
<% } %>
